version: "3.8"

  services:
    postgres:
      image: postgres:14
      container_name: auction-pulse-postgres
      environment:
        POSTGRES_USER: user
        POSTGRES_PASSWORD: pass
        POSTGRES_DB: auctionpulse
      ports:
        - "5432:5432"
      volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      networks:
        - auction-pulse-network
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U user -d auctionpulse || exit 1"]
        interval: 10s
        timeout: 5s
        retries: 10

    redis:
      image: redis:7
      container_name: auction-pulse-redis
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
      networks:
        - auction-pulse-network
      command: ["redis-server", "--appendonly", "yes"]
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 10s
        timeout: 5s
        retries: 5

    zookeeper:
      image: confluentinc/cp-zookeeper:7.0.1
      container_name: auction-pulse-zookeeper
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"
      volumes:
        - zookeeper_data:/var/lib/zookeeper/data
      networks:
        - auction-pulse-network
      healthcheck:
        test: ["CMD-SHELL", "echo ruok | nc -w 2 localhost 2181 || true"]
        interval: 10s
        timeout: 5s
        retries: 5

    kafka:
      image: confluentinc/cp-kafka:7.0.1
      container_name: auction-pulse-kafka
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ports:
        - "9092:9092"
      volumes:
        - kafka_data:/var/lib/kafka/data
      networks:
        - auction-pulse-network
      healthcheck:
        test:
          [
            "CMD-SHELL",
            "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1",
          ]
        interval: 15s
        timeout: 5s
        retries: 8

  volumes:
    postgres_data:
    redis_data:
    zookeeper_data:
    kafka_data:

  networks:
    auction-pulse-network:
      driver: bridge
